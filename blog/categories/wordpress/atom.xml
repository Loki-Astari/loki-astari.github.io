<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: WordPress | Loki Astari]]></title>
  <link href="http://lokiastari.com/blog/categories/wordpress/atom.xml" rel="self"/>
  <link href="http://lokiastari.com/"/>
  <updated>2016-02-29T12:49:14-08:00</updated>
  <id>http://lokiastari.com/</id>
  <author>
    <name><![CDATA[Loki Astari]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Switching to OctoPress]]></title>
    <link href="http://lokiastari.com/blog/2013/11/30/switching-to-octopress/"/>
    <updated>2013-11-30T15:37:34-08:00</updated>
    <id>http://lokiastari.com/blog/2013/11/30/switching-to-octopress</id>
    <content type="html"><![CDATA[<h2>Switching to OctoPress and Github</h2>

<p>I have not blogged much, until recently, so I am not an HTML/CSS/Javascript expert. Thus layout, or layout during writing an article, is not of supreme importance for me. I expect the framework to handle that all for me. But that was my issue with WordPress. As a normal blogger I am sure it is not an issue, but the tools for blogging about code are rudimentary and not well integrated in to WordPress; basically forcing me to write in HTML (see <a href="http://lokiastari.com/blog/2013/11/12/want-to-set-up-wordpress-to-write-about-programming/">Set up WordPress</a>). I do write a lot on other sites that specialize in coding and these sites have developed a style called &lt;MarkDown&gt;. The two most common versions are &lsquo;<a href="http://stackoverflow.com/editing-help">StackOverFlow markdown</a>&rsquo; and &lsquo;<a href="http://daringfireball.net/projects/markdown/syntax">GitHub markdown</a>&rsquo;.</p>

<h3>MarkDown</h3>

<p>Markdown is a very simplistic form of &lsquo;Markup&rsquo; (yes programmers think they are funny with the up/down thing) that is designed specifically to be simple and deal with the common issues of writing word based articles. Coder sites usually extend this with basic support for placing code (or preformatted text) directly into the article. It is not designed for non technical people (they should be using a &lsquo;Visual&rsquo; interface not markup) but for the technical writer who does not want the full blown power of HTML, but wants slightly more control than visual interfaces provide.</p>

<h3>Attack Vector</h3>

<p>WordPress is also infamous for being the target of attackers, thus new attacks are constantly being developed (the joy of being top dog). This can be mitigated by putting your WordPress site on <a href="wordpress.com">wordpress.com</a>. This not only provides you with free hosting, but they do keep on top of security vulnerabilities and make sure all hosted sites are not overexposed.</p>

<p>If you want use your own domain name (i.e. <a href="LokiAstari.com">LokiAstari.com</a>) or any other &ldquo;featured&rdquo; services then you either need to fork up the cash (not an insignificant sum) or run your own WordPress site. So I have been running my own WordPress sites. However, running your own site opens you to the vulnerabilities of WordPress attacks. To be honest not a big deal until I actually tweeted about my articles (now very much so).</p>

<p>So the combination of these two issues has made me look for alternatives.</p>

<h3>OctoPress</h3>

<p><a href="octopress.org">OctoPress</a> was suggested by a colleague <a href="https://github.com/danlecocq">Dan Lecocq</a>. It is basically an off-line blogging system that takes your articles and creates a set of static pages. You can then use several systems to publish these static pages. As the pages are generated once (each time you create a new article) the requirements for the hosting system are minimal, and consequently, because there is no dynamic content, there are no attack vectors that can be used against the site. Note: This does not mean the site has to be simple or boring as the pages can still have dynamic content loaded from other sites (like twitter/github/facebook etc.) It is just that the dynamic content will be fetched by the browser from other sites.</p>

<p>The other major advantage is that it natively supports MarkDown. In fact, you plug in your favorite MarkDown engine (I have currently stuck with the default &lsquo;GitHub markdown&rsquo;). So you can write your article in MarkDown, and it will translate to the appropriate HTML.</p>

<p>Like WordPress it has multiple themes, unlike WordPress the user base is small so the pool of user created themes is tiny in comparison (a couple of dozen). Though not as well established as WordPress, you can easily extend it and build your own themes. There are already a couple of themes based on <a href="https://github.com/twbs/bootstrap">Bootstrap</a> the most commonly forked HTML5/CSS/Javascript web-site project on <a href="github.com">GitHub</a>.</p>

<h3>GitHub</h3>

<p>OctoPress also integrates with <a href="http://pages.github.com/">GitHub Pages</a> a feature of the site designed to allow you to create documentation for your software.</p>

<p>Though this is still not my perfect writing environment; OctoPress is a step up from using WordPress (for me, if you are not used to writing code it will not be good for you and I would stick to WordPress&rsquo;s Visual editor). There are a couple of tweaks I still need to iron out here and there. Once I have got a basic system working perfectly I will talk about exactly what I did. I have some ideas on how to improve the basics which may be down the road a bit (I need to perform more research how others are using this tool so I don&rsquo;t reinvent the wheel).</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Want to set up WordPress to write about Programming]]></title>
    <link href="http://lokiastari.com/blog/2013/11/12/want-to-set-up-wordpress-to-write-about-programming/"/>
    <updated>2013-11-12T11:43:06-08:00</updated>
    <id>http://lokiastari.com/blog/2013/11/12/want-to-set-up-wordpress-to-write-about-programming</id>
    <content type="html"><![CDATA[<p>Setting up WordPress to display syntax highlighted code was a struggle due to different plugins that don’t all seem to work together, the different types of editor, etc. I don’t want to learn all about WordPress. I just want to write some simple articles.</p>

<p>I am at the point where I am productive and don’t destroy my articles accidentally by switching between Visual editor and Text editor, however, I am still not totally happy. Writing articles in pure HTML is not the best solution. Even with help buttons, this is the realm of the web developer that needs to lay out elements perfectly. The article writer (blogger) just needs text to flow and highlight with a smattering of subtle color. I would prefer some slightly higher level markup such as in <code>Stackoverflow</code> or <code>github</code> preferably. If you have worked through this problem and have a good solution, drop me a line.</p>

<p>Here is a list of things I did to make myself productive:</p>

<ul>
<li>Turn off the Visual Editor <br/>
  Switching between the <code>visual</code> editor and the <code>text</code> editor always seems to destroy something in the code. What survived and what was mutated depended on the plugins but the result was always disastrous. Therefore turn it off. <br/>
  Of course this means I am now writing in HTML (not perfect buy I can manage). <br/>
  Goto <code>Users-&gt;Your Profile</code>. The first option allows you to disable the visual editor</li>
<li>Install the plugins:

<ul>
<li>Crayon Syntax Highlighter:  <br/>
There are a lot of syntax highlighters out there. It does not matter which one you choose as they all seem to use the same back-end to do the coloring. This one worked for me.</li>
<li>Preserve Code Formatting: <br/>
This prevents WordPress from mucking with the spaces between the &lt;pre&gt; tags.</li>
</ul>
</li>
</ul>


<p>I also asked on <a href="http://wordpress.stackexchange.com/questions/123040/standard-developer-markup-plugins">WordPress.stackexchange.com : Standard developer markup plugins</a> but did not get much help.</p>
]]></content>
  </entry>
  
</feed>
